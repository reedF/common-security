<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/jdbc
     http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     http://www.springframework.org/schema/task
     http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:annotation-config />

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>
	<!-- 用户的密码加密或解密 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />

		<property name="maxActive" value="20" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="logAbandoned" value="true" />
	</bean>

	<!-- Mybatis -->
	<import resource="app-mybatis.xml" />
	<!-- Ehcache -->
    <import resource="app-cache-aop.xml" />


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<!-- 
				PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行; 
				PROPAGATION_MANDATORY: 使用当前事务, 如果没有, 则抛出异常; 
				PROPAGATION_REQUIRED: 新建事务,如果当前有事务, 则挂起; 
				PROPAGATION_NOT_SUPPORTED:以非事务的方式执行,如果当前有事务, 则挂起; 
				PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常; +/-Exception + 表示异常出现时事物提交 - 表示异常出现时事务回滚
				 -->
				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	<!-- 用来定义那些类需要采用事物管理 spring 事物的动态代理类 BeanNameAutoProxyCreator 根据类名自动代理，接受表达式 -->
	<bean id="BeanProxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<!-- 对类名以Service结尾的类进行代理 -->
			<value>*Service</value>
		</property>
		<!-- 对代理类进行加载拦截器(实现通知的过程) -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="securityService" class="com.reed.security.service.SecurityServiceImpl" />
	<bean id="userService" class="com.reed.security.service.UserServiceImpl" />
	<bean id="roleService" class="com.reed.security.service.RoleServiceImpl" />
	<bean id="modelService" class="com.reed.security.service.ModelServiceImpl" />
	<bean id="groupService" class="com.reed.security.service.GroupServiceImpl" />
	<bean id="resourceService" class="com.reed.security.service.ResourceServiceImpl" />
	
</beans>
